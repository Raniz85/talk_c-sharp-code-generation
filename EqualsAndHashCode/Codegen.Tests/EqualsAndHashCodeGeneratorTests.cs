using FluentAssertions;
using Microsoft.CodeAnalysis.Text;
using Xunit;

namespace Codegen.Tests;

public class EqualsAndHashCodeGeneratorTests
{
    [Fact]
    public void ThatMarkerAttributeIsGenerated()
    {
        // Given a source file that triggers generation
        var source = @"
using Codegen;
namespace Test;

[EqualsAndHashCode]
public partial class TestSubject
{
}
";
        // and a source generator
        var generator = new EqualsAndHashCodeGenerator();
        
        // When source generation is run
        var results = generator.RunSourceGenerator(source);
        
        // Then the attribute is generated correctly
        results.Should().ContainKey("Codegen/Codegen.EqualsAndHashCodeGenerator/EqualsAndHashCodeAttribute.cs")
            .WhoseValue.Trim().Should().Be(@"
// <auto-generated/>

namespace Codegen;

[System.AttributeUsage(System.AttributeTargets.Class)]
public class EqualsAndHashCodeAttribute: System.Attribute
{
}".Trim());
    }
}